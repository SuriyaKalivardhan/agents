@page "/agents/delete"
@using Azure.AI.OpenAI.Assistants
@using Azure.AI.Runtime

@inject NavigationManager NavigationManager
@inject AssistantsClient assistantClient;

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Agent</h4>
    <hr />
    @if (agent is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@agent.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@agent.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Model</dt>
            <dd class="col-sm-10">@agent.Model</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Instructions</dt>
            <dd class="col-sm-10">@agent.Instructions</dd>
        </dl>
        <EditForm method="post" Model="agent" OnValidSubmit="DeleteAgent" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(agent is null)">Delete</button> |
            <a href="/agents">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Agent? agent;

    [SupplyParameterFromQuery]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Assistant assistant = await assistantClient.GetAssistantAsync(this.Id);

        if(assistant != null)
        {
            agent = new Agent();
            agent.Id = assistant.Id;
            agent.Name = assistant.Name;
            agent.Description = assistant.Description;
            agent.Model = assistant.Model;
        }

        if (agent is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteAgent()
    {
        await assistantClient.DeleteAssistantAsync(this.Id);
        NavigationManager.NavigateTo("/agents", true);
    }
}